**Welcome to the Mschedule Development Wiki.** 

Here we will be busting out some crazy ideas and implementations for [[Mschedule]].

[[Similar]]

Things to do:

Separate this out into a completely separate project:
[[Wolverine Access scraping]]

===Separate Tiers===

  * Input could be from command line, url query string, web service, another php script, etc.
  * Format input like you would for Wolverine Access

----
  * Gather and validate input from user.
  * Go through Wolverine Access entering input data and downloading html files
  * Validating files to be sure we should parse them. If we shouldn't, throw an error.
  * Go ahead and parse the files (into PHP objects?, into XML?)
  * Eventually, output should be in XML

----
  * XML could be piped to screen, to another file, to a web browser, to a javascript application, to a java applet, to  a php proxy script, to another php function


New, very similar project based on feedback to Mschedule and my personal opinions on it.

==The Problem==
When I'm looking for a time to meet someone for something, we need to find a mutually agreeable time. The problem is trying to send my calendar to them. Giving them access to my entire life calendar is annoying, and so is typing out all my obligations for the week. So, what I want to display to people are my current plans for the week based on my private calendar. These may just be blocks of time and relative location. 

==Simplifing the problem==
  * Most events on my calendar happen at regular intervals. Usually every week is the same thing. Class schedule, Blue Puddle Meetings, Lunch, Sleep.
  * Much of my time is taken by going to class. 
  * I have class in several general locations: North, Central, Home, Out of town



===2/3/06===

==Separate for easy scalability==

Specify exactly what information is needed for a course:
  * Unique (or unique enough) course name or number
  * Type: Lecture, Discussion, etc (May not be needed)
  * Location: (perhaps separated out into campus, building and room number)


Bookstores subscribe to student class information (completely student opt in) so that they can recommend books for them. Basically, we will provide the student with a link directly to the bookstore's website in order to submit a pickup order. Or, in the case of an online reseller like Amazon, attempt to link up the courses to their textbook ISBN numbers.




